class Node:
    def __init__(self, theData, nextNewNode):
        self.Data = theData
        self.nextNode = nextNewNode

linkedList = [Node(1,1),Node(5,4),Node(6,7),Node(7,-1),Node(2,2),Node(0,6),Node(0,8),Node(56,3),Node(0,9),Node(0,-1)]
StartPointer = 0
emptyList = 5

def outputNodes(linkedList, CurrentPointer):
    while CurrentPointer != -1:
        print(str(linkedList[CurrentPointer].Data))
        CurrentPointer = linkedList[CurrentPointer].nextNode

def addNode(linkedList, CurrentPointer, emptyList):
    dataToAdd = input("Enter data to input: ")

    if emptyList < 0 and emptyList > 9:
        return False
    else:

        newNode = Node(int(dataToAdd), -1)
        linkedList[emptyList] = newNode

        PreviousPointer = 0
        while CurrentPointer != -1:
            PreviousPointer = CurrentPointer
            CurrentPointer = linkedList[CurrentPointer].nextNode
        linkedList[PreviousPointer].nextNode = emptyList
        emptyList = linkedList[emptyList].nextNode

        return True

linkedList = [Node(1,1),Node(5,4),Node(6,7),Node(7,-1),Node(2,2),Node(0,6),Node(0,8),Node(56,3),Node(0,9),Node(0,-1)]
StartPointer = 0
emptyList = 5
outputNodes(linkedList, StartPointer)
returnValue = addNode(linkedList, StartPointer, emptyList)
if returnValue == True:
    print("Value entered successfully")
else:
    print("Value not entered, list full")
outputNodes(linkedList, StartPointer)
